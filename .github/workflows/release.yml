name: B-market Release CI/CD

on:
  push:
    branches: [ "master" ]

env:
  # DOCKER_IMAGE: ghcr.io/${{ github.actor }}/fe-lb-v3-dev-auto-deploy
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/b-market
  DOCKER_CONTAINER: b-market-release
  VERSION: ${{ github.sha }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      PORT: 3000
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Github Repository Secrets를 통해 환경 변수 파일 생성
      - name: Create .env file
        run: |
          echo "DB_PASSWORD=$DB_PASSWORD" >> .env
          echo "DB_URL=$DB_URL" >> .env
          echo "DB_USERNAME=$DB_USERNAME" >> .env
          echo "JWT_SECRET=$JWT_SECRET" >> .env
        env:
          DB_PASSWORD: ${{ secrets.$DB_PASSWORD }}
          DB_URL: ${{ secrets.$DB_URL }}
          DB_USERNAME: ${{ secrets.$DB_USERNAME }}
          JWT_SECRET: ${{ secrets.$JWT_SECRET }}

      # docker cli 플러그인 buildx 설치. 이후 도커 빌드 수행
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # GitHub Container Registry에 로그인 후 빌드 & 푸시
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

  deploy:
    needs: build # build 후에 실행되도록 정의
    name: Deploy
    # AWS EC2 인스턴스에서 Actions Runner 설치 시 ./configure에서 사용할 label명
    # runs-on: [self-hosted, fe-lb-v3-dev-label]  # fe-dev(인스턴스)
    runs-on: [ self-hosted, b-market-runner ] # fe-lb-v3-dev(인스턴스)
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      # - name: Login to ghcr
      #   run: |
      #     docker login -u ${{ github.actor }} -p ${{ secrets.CKEDITOR_AUTH_TOKEN }} ghcr.io

      - name: Remove running container and image
        run: |
          docker stop ${{ env.DOCKER_CONTAINER }} && docker rm ${{ env.DOCKER_CONTAINER }} && docker rmi ${{ env.DOCKER_IMAGE }}:latest
      - name: Docker run
        run: |
          docker run -d -p 80:3000 --name ${{ env.DOCKER_CONTAINER }} --restart always ${{ env.DOCKER_IMAGE }}:latest

      # - name: Docker run
      #   run: |
      #     docker login -u ${{ github.actor }} -p ${{ secrets.CKEDITOR_AUTH_TOKEN }} ghcr.io
      #     docker stop ${{ env.DOCKER_CONTAINER }} && docker rm ${{ env.DOCKER_CONTAINER }} && docker rmi ${{ env.DOCKER_IMAGE }}:latest
      #     docker run -d -p 3000:3000 --name ${{ env.DOCKER_CONTAINER }} --restart always ${{ env.DOCKER_IMAGE }}:latest